{"version":3,"sources":["Elements/Header/Header.js","utils/config.js","Elements/SearchBar/SearchBar.js","Elements/FourColGrid/FourColGrid.js","Elements/MovieThumb/MovieThumb.js","Elements/LoadMoreBtn/LoadMoreBtn.js","Elements/Spinner/Spinner.js","components/Home/Home.js","Elements/Navigation/Navigation.js","Elements/Favourites/Favourites.js","Elements/MovieInfo/MovieInfo.js","components/Movie/Movie.js","components/Favourites/Favourites.js","Elements/NotFound/NotFound.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Header","className","to","API_URL","API_KEY","SearchBar","state","value","timeout","doSearch","event","setState","target","clearTimeout","setTimeout","props","callback","type","placeholder","onChange","this","Component","FourColGrid","header","loading","children","map","element","i","key","MovieThumb","Fragment","clickable","pathname","movieId","movieName","src","image","alt","LoadMoreBtn","onClick","text","Spinner","Home","movies","heroImage","currentPage","totalPages","searchTerm","searchItems","endpoint","fetchItems","loadMoreItems","fetch","then","result","json","results","page","total_pages","poster_path","id","original_title","Navigation","movie","FavouriteBtn","myArray","JSON","parse","localStorage","getItem","isToggleOn","handleClick","bind","length","push","index","indexOf","splice","setItem","stringify","MovieInfo","title","tagline","emptySymbol","icon","size","fullSymbol","initialRating","vote_average","readonly","spoken_languages","languages","time","data","info","name","filter","el","array","renderInfo","runtime","date","split","splitYear","release_date","genre","genres","overview","Movie","fetchMovieData","status_code","catch","error","console","match","params","FavouritesMovies","log","NotFound","library","add","fab","faPoll","faHeart","faDotCircle","fasFaStar","farFaStar","faSearch","faLink","faPlay","App","path","component","exact","React","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.73ebd68a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"cinema-header\">\r\n      <div className=\"cinema-header-content\">\r\n        <Link className=\"cinema-header-logo\" to=\"/\">\r\n          YoYo Cinema\r\n        </Link>\r\n        <Link className=\"cinema-header-link\" to=\"/favourites\">\r\n          Favourites\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","// Configuration for TMDB\r\n\r\nconst API_URL = 'https://api.themoviedb.org/3/';\r\nconst API_KEY = '4cb1eeab94f45affe2536f2c684a5c9e';\r\n\r\n// Images\r\n\r\n// An image URL looks like this example:\r\n// http://image.tmdb.org/t/p/w780/bOGkgRGdhrBYJSLpXaxhXVstddV.jpg\r\n\r\nconst IMAGE_BASE_URL ='http://image.tmdb.org/t/p/';\r\n\r\n//Sizes: w300, w780, w1280, original\r\nconst BACKDROP_SIZE = 'w1280';\r\n\r\n// w92, w154, w185, w342, w500, w780, original\r\nconst POSTER_SIZE = 'w500';\r\n\r\nexport {\r\n  API_URL, API_KEY, IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE\r\n}","import React, { Component } from \"react\";\r\n// import FontAwesome from \"react-fontawesome\";\r\nimport \"./SearchBar.css\";\r\n\r\nclass SearchBar extends Component {\r\n    \r\n    state = {\r\n        value: \"\"\r\n    };\r\n\r\n    timeout = null;\r\n\r\n    doSearch = event => {\r\n        this.setState({ value: event.target.value });\r\n        clearTimeout(this.timeout);\r\n\r\n        this.timeout = setTimeout(() => {\r\n            this.props.callback(this.state.value);\r\n        }, 500);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"rmdb-searchbar\">\r\n                <div className=\"rmdb-searchbar-content\">\r\n                    {/* <FontAwesome className=\"rmdb-fa-search\" name=\"search\" size=\"2x\" /> */}\r\n                    <input type=\"text\" className=\"rmdb-searchbar-input\" placeholder=\"Search the movie\"\r\n                        onChange={this.doSearch} value={this.state.value}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport \"./FourColGrid.css\";\r\n\r\nconst FourColGrid = props => {\r\n    const renderElements = () => {\r\n        const gridElements = props.children.map((element, i) => {\r\n            return (\r\n                <div key={i}> {element} </div>\r\n            );\r\n        });\r\n        return gridElements;\r\n    };\r\n\r\n    return (\r\n        <div className=\"grid\">\r\n            {props.header && !props.loading ? <h1>{props.header}</h1> : null}\r\n            <div className=\"grid-content\">{renderElements()}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FourColGrid;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./MovieThumb.css\";\r\n\r\nconst MovieThumb = props => {\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                props.clickable ? \r\n                (\r\n                    <React.Fragment>\r\n                        <Link className=\"movie-thumb\" to={{ pathname: `/movie/${props.movieId}`, movieName: `${props.movieName}` }}>\r\n                            <img src={props.image} alt=\"moviethumb\" />\r\n                        </Link>\r\n                        <div className=\"thumb-details-wrapper\">\r\n                            <div className=\"title\">\r\n                                <h2>{props.movieName}</h2>\r\n                            </div>\r\n                        </div>\r\n                    </React.Fragment>\r\n                ) : (\r\n                        <img src={props.image} alt=\"moviethumb\" />\r\n                )\r\n            }\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nMovieThumb.propTypes = {\r\n  image: PropTypes.string,\r\n  movieId: PropTypes.number,\r\n  movieName: PropTypes.string\r\n};\r\n\r\nexport default MovieThumb;\r\n","import React from \"react\";\r\nimport \"./LoadMoreBtn.css\";\r\n\r\nconst LoadMoreBtn = props => {\r\n    return (\r\n        <div className=\"loadbtn\">\r\n            <div className=\"loadmorebtn\" onClick={props.onClick}>\r\n                <p>{props.text}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoadMoreBtn;\r\n","import React from \"react\";\r\nimport \"./Spinner.css\";\r\n\r\nconst Spinner = () => {\r\n  return <div className=\"loader\" />;\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { Component } from \"react\";\r\nimport \"./Home.css\";\r\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE } from \"../../utils/config\";\r\nimport SearchBar from \"../../Elements/SearchBar/SearchBar\";\r\nimport FourColGrid from \"../../Elements/FourColGrid/FourColGrid\";\r\nimport MovieThumb from \"../../Elements/MovieThumb/MovieThumb\";\r\nimport LoadMoreBtn from \"../../Elements/LoadMoreBtn/LoadMoreBtn\";\r\nimport Spinner from \"../../Elements/Spinner/Spinner\";\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    movies: [],\r\n    heroImage: null,\r\n    loading: false,\r\n    currentPage: 0,\r\n    totalPages: 0,\r\n    searchTerm: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n    const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&page=1`;\r\n    this.fetchItems(endpoint);\r\n  }\r\n\r\n  searchItems = searchTerm => {\r\n    let endpoint = \"\";\r\n    this.setState({\r\n      movies: [],\r\n      loading: true,\r\n      searchTerm\r\n    });\r\n\r\n    if (searchTerm === \"\") {\r\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&page=1`;\r\n    } else {\r\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&query=${searchTerm}`;\r\n    }\r\n    this.fetchItems(endpoint);\r\n  };\r\n\r\n  loadMoreItems = () => {\r\n    let endpoint = \"\";\r\n    this.setState({\r\n      loading: true\r\n    });\r\n\r\n    if (this.state.searchTerm === \"\") {\r\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&page=${this\r\n        .state.currentPage + 1}`;\r\n    } else {\r\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&query=${this.state.searchTerm}&page=${this.state.currentPage + 1}`;\r\n    }\r\n    this.fetchItems(endpoint);\r\n  };\r\n\r\n  fetchItems = endpoint => {\r\n    fetch(endpoint)\r\n      .then(result => result.json())\r\n      .then(result => {\r\n        this.setState({\r\n          movies: [...this.state.movies, ...result.results],\r\n          heroImage: this.state.heroImage || result.results[0],\r\n          loading: false,\r\n          currentPage: result.page,\r\n          totalPages: result.total_pages\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"home\">\r\n        {this.state.heroImage ? (\r\n          <div>\r\n            <SearchBar callback={this.searchItems} />\r\n          </div>\r\n        ) : null}\r\n        <div className=\"home-grid\">\r\n          <FourColGrid\r\n            header={this.state.searchTerm ? \"Search Result\" : \"Popular Movies\"}\r\n            loading={this.state.loading}\r\n          >\r\n            {this.state.movies.map((element, i) => {\r\n              return (\r\n                <MovieThumb\r\n                  key={i}\r\n                  clickable={true}\r\n                  image={\r\n                    element.poster_path\r\n                      ? `${IMAGE_BASE_URL}${POSTER_SIZE}/${element.poster_path}`\r\n                      : \"./images/no_image.jpg\"\r\n                  }\r\n                  movieId={element.id}\r\n                  movieName={element.original_title}\r\n                />\r\n              );\r\n            })}\r\n          </FourColGrid>\r\n          {this.state.loading ? <Spinner /> : null}\r\n          {this.state.currentPage <= this.state.totalPages &&\r\n          !this.state.loading ? (\r\n            <LoadMoreBtn text=\"Load More\" onClick={this.loadMoreItems} />\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navigation.css\";\r\n\r\nconst Navigation = props => {\r\n    return (\r\n        <div className=\"rmdb-navigation\">\r\n            <div className=\"rmdb-navigation-content\">\r\n                <Link to=\"/\">\r\n                    <p>Home</p>\r\n                </Link>\r\n                <p>/</p>\r\n                <p>{props.movie}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { Component } from \"react\";\r\nimport \"./Favourites.css\";\r\n\r\nclass FavouriteBtn extends Component {\r\n    myArray = JSON.parse(localStorage.getItem('favorites')) || [];\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {isToggleOn: true};\r\n        this.handleClick = this.handleClick.bind(this);\r\n        for(let  i=0; i < this.myArray.length; i++) {\r\n            if(this.props.movie.id === this.myArray[i].id) {\r\n                this.state = {isToggleOn: false}\r\n            }\r\n        }\r\n    }\r\n    \r\n    handleClick() {\r\n        if(this.state.isToggleOn === true) {\r\n            this.myArray.push(this.props.movie);\r\n        } else {\r\n            for(let  i=0; i < this.myArray.length; i++) {\r\n                if(this.props.movie.id === this.myArray[i].id) {\r\n                    let index = this.myArray.indexOf(this.myArray[i])\r\n                    this.myArray.splice(index, 1);     \r\n                }\r\n            }\r\n        }\r\n        this.setState(state => ({\r\n          isToggleOn: !state.isToggleOn\r\n        }));\r\n         localStorage.setItem('favorites', JSON.stringify(this.myArray));\r\n    }\r\n    \r\n    render() {\r\n        return  (\r\n            <button className=\"brick\" onClick={this.handleClick}>\r\n                {this.state.isToggleOn ? 'Add' : 'Remove'} Favourite\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FavouriteBtn;","import React from \"react\";\r\nimport { IMAGE_BASE_URL } from \"../../utils/config\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Stars from 'react-rating';\r\nimport FavouriteBtn from '../Favourites/Favourites';\r\nimport \"./MovieInfo.css\";\r\n\r\nconst MovieInfo = props => {\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"movie-wrapper\">\r\n        <div className=\"image-wrapper\">\r\n          <img className=\"movie-image\" src={`${IMAGE_BASE_URL}w780${props.movie.poster_path}`} alt=\"moviethumb\" />\r\n        </div>\r\n        <div className=\"movie-details\">\r\n          <div className=\"header-wrapper\">\r\n            <div className=\"title\"> \r\n              <h1>{props.movie.title}</h1>\r\n            </div>\r\n            <div className=\"subtitle\">\r\n              <h2>{props.movie.tagline}</h2>\r\n            </div>\r\n          </div>\r\n          <div className=\"details-wrapper\">\r\n            <div className=\"ratings-wrapper\">\r\n            <Stars\r\n              emptySymbol={<FontAwesomeIcon icon={['far', 'star']} size=\"lg\" />}\r\n              fullSymbol={<FontAwesomeIcon icon={['fas', 'star']} size=\"lg\" />}\r\n              initialRating={props.movie.vote_average / 2}\r\n              readonly\r\n            />\r\n            <div className=\"ratings-number\">\r\n              <p>\r\n                {props.movie.vote_average}\r\n              </p>\r\n            </div>\r\n            </div>\r\n            <div className=\"info\">\r\n              { \r\n                props.movie.spoken_languages ?  \r\n                renderInfo( props.movie.spoken_languages, props.movie.runtime, splitYear(props.movie.release_date)) : null\r\n              }\r\n            </div>\r\n          </div>\r\n          <FavouriteBtn movie={props.movie}/>\r\n          <div  className=\"heading\">\r\n            <h3>The Genres</h3>\r\n          </div>\r\n          <div className=\"links-wrapper\">\r\n            {\r\n              props.movie.genre ? \r\n              renderGenres(props.movie.genres) : null\r\n            }\r\n          </div>\r\n          <div className=\"heading\">\r\n            <h3>Overview</h3>\r\n          </div>\r\n          <div className=\"text\">\r\n            <p>\r\n              {\r\n                props.movie.overview ? props.movie.overview: 'There is no overview available...'\r\n              }\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction renderInfo(languages, time, data) {\r\n  const info = [];\r\n  if (languages.length !== 0) {\r\n    info.push(languages[0].name);\r\n  }\r\n  info.push(time, data);\r\n  return info\r\n    .filter(el => el !== null)\r\n    .map(el => (typeof el === 'number' ? `${el} min.` : el))\r\n    .map((el, i, array) => (i !== array.length - 1 ? `${el} / ` : el));\r\n}\r\n\r\n\r\n// Function to get the year only from the date\r\nfunction splitYear(date) {\r\n  if (!date) {\r\n    return;\r\n  }\r\n  const [year] = date.split('-');\r\n  return year;\r\n}\r\n\r\n// Render Genres with links\r\nfunction renderGenres(genres) {\r\n  return genres.map(genre => (\r\n    <div className=\"styled-link\" key={genre.id}>\r\n      <FontAwesomeIcon icon={['fas', 'dot-circle']} size=\"sm\" />\r\n      <span> {genre.name}</span>\r\n    </div>\r\n  ));\r\n}\r\n\r\nexport default MovieInfo;\r\n","import React, { Component } from \"react\";\r\nimport { API_URL, API_KEY } from \"../../utils/config\";\r\nimport Navigation from \"../../Elements/Navigation/Navigation\";\r\nimport MovieInfo from \"../../Elements/MovieInfo/MovieInfo\";\r\nimport \"./Movie.css\";\r\n\r\nclass Movie extends Component {\r\n  state = {\r\n    movie: null,\r\n    loading: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n    const endpoint = `${API_URL}movie/${ this.props.match.params.movieId}?api_key=${API_KEY}`;\r\n    this.fetchMovieData(endpoint);\r\n  }\r\n\r\n  fetchMovieData = endpoint => {\r\n    fetch(endpoint)\r\n    .then(result => result.json())\r\n    .then(result => {\r\n      if (result.status_code) {\r\n        this.setState({ loading: false });\r\n      } else {\r\n        this.setState(\r\n          {\r\n            movie: result\r\n          },\r\n        );\r\n      }\r\n    })\r\n    .catch(error => console.error(\"Error: \", error));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.movie ? (\r\n          <div>\r\n            <Navigation movie={this.state.movie.title} />\r\n            <MovieInfo movie={this.state.movie} />\r\n          </div>\r\n        ) : null}\r\n        { !this.state.loading ? ( <h1>No Movie Found!</h1>) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movie;\r\n","import React, { Component } from \"react\";\r\nimport \"./Favourites.css\";\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../../utils/config\";\r\nimport FourColGrid from \"../../Elements/FourColGrid/FourColGrid\";\r\nimport MovieThumb from \"../../Elements/MovieThumb/MovieThumb\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass FavouritesMovies extends Component {\r\n    state = {\r\n        movies: [],\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setState({ loading: true });\r\n        this.fetchItems();\r\n    }\r\n\r\n    fetchItems() {\r\n        let myArray = JSON.parse(localStorage.getItem('favorites'));\r\n        if(myArray.length > 0) {\r\n            this.setState({\r\n                movies: [...myArray]\r\n            })\r\n        } else {\r\n            console.log('no movie found');\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"home\">\r\n                <div className=\"rmdb-navigation\">\r\n                    <div className=\"rmdb-navigation-content\">\r\n                        <Link to=\"/\">\r\n                            <p>Home</p>\r\n                        </Link>\r\n                        <p>/</p>\r\n                        <p>Favourites</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"home-grid\">\r\n                    <FourColGrid header=\"Favourites\" loading={this.state.loading}>\r\n                        {\r\n                            this.state.movies.map((element, i) => {\r\n                                return (\r\n                                    <MovieThumb\r\n                                        key={i}\r\n                                        clickable={true}\r\n                                        image={\r\n                                            element.poster_path\r\n                                            ? `${IMAGE_BASE_URL}${POSTER_SIZE}/${element.poster_path}`\r\n                                            : \"./images/no_image.jpg\"\r\n                                        }\r\n                                        movieId={element.id}\r\n                                        movieName={element.original_title}/>\r\n                                );\r\n                            })\r\n                        }\r\n                    </FourColGrid>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FavouritesMovies;","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1>Whooops. This page doesn't exist</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Header from \"../../Elements/Header/Header\";\r\nimport Home from \"../Home/Home\";\r\nimport Movie from \"../Movie/Movie\";\r\nimport FavouritesMovies from '../Favourites/Favourites';\r\nimport NotFound from \"../../Elements/NotFound/NotFound\";\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { fab } from '@fortawesome/free-brands-svg-icons';\r\nimport { faPoll,faHeart, faDotCircle, faStar as fasFaStar, faSearch, faLink,faPlay} from '@fortawesome/free-solid-svg-icons';\r\nimport { faStar as farFaStar } from '@fortawesome/free-regular-svg-icons';\r\nlibrary.add( fab,faPoll,faHeart, faDotCircle, fasFaStar, farFaStar, faSearch, faLink, faPlay);\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <React.Fragment>\r\n          <Header />\r\n            <Switch>\r\n            <Route path=\"/\" component={Home} exact />\r\n            <Route path=\"/movie/:movieId\" component={Movie} exact />\r\n            <Route path=\"/favourites\" component={FavouritesMovies} exact/>\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </React.Fragment>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}